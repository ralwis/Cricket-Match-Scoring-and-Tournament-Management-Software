/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atm;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.time.format.DateTimeFormatter;  
import java.time.LocalDateTime;    
import java.util.Date;
import java.util.Locale;
import javax.lang.model.util.Types;
import javax.swing.table.DefaultTableModel;
import java.util.concurrent.TimeUnit;   
import java.util.Calendar;
import java.util.TimeZone;


/**
 *
 * @author USER
 */
public class ScoreCard extends javax.swing.JFrame {

    /**
     * Creates new form ScoreCard
     */
    public ScoreCard() {
        initComponents();
    }
    
    String emailaddress;         //String emailaddress;       
    String tourname;             //String tourname;              
    
    //String emailaddress = "kawya@gmail.com";
    //String tourname = "LPL";
    
    public ScoreCard(String email, String tour) {
        displayTime();    
        initComponents();
        emailaddress = email;     //Should uncomment
        tourname = tour;         //Should uncomment
        //emailaddress = "kawya@gmail.com";
        //tourname = "LPL";
        userEmail.setText(emailaddress);
        tourName.setText(tourname);       
        //getteamCount();
        //getteamNames();
        //gettotalmatches();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        twoteamsbuttonGroup = new javax.swing.ButtonGroup();
        eachballrunbuttonGroup = new javax.swing.ButtonGroup();
        nbbuttonGroup = new javax.swing.ButtonGroup();
        penaltybuttonGroup = new javax.swing.ButtonGroup();
        wickettypebuttonGroup = new javax.swing.ButtonGroup();
        runoutplayerbuttonGroup1 = new javax.swing.ButtonGroup();
        nbbatsmanrunsbuttonGroup1 = new javax.swing.ButtonGroup();
        wdrunsbuttonGroup = new javax.swing.ButtonGroup();
        lbrunsbuttonGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        exitBTN = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userEmail = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        backBTN = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        bowlername = new javax.swing.JComboBox<>();
        batsman1name = new javax.swing.JComboBox<>();
        batsman2name = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        Bat1_0 = new javax.swing.JRadioButton();
        Bat1_1 = new javax.swing.JRadioButton();
        Bat1_2 = new javax.swing.JRadioButton();
        Bat1_3 = new javax.swing.JRadioButton();
        Bat1_4 = new javax.swing.JRadioButton();
        Bat1_5 = new javax.swing.JRadioButton();
        Bat1_6 = new javax.swing.JRadioButton();
        Bat1_7 = new javax.swing.JRadioButton();
        Bat1_8 = new javax.swing.JRadioButton();
        wd_ball = new javax.swing.JRadioButton();
        no_ball = new javax.swing.JRadioButton();
        leg_bye = new javax.swing.JRadioButton();
        wd_runs = new javax.swing.JComboBox<>();
        batman_nb_runs = new javax.swing.JComboBox<>();
        lb_runs = new javax.swing.JComboBox<>();
        overcount = new javax.swing.JLabel();
        ballcount = new javax.swing.JLabel();
        Bat2_0 = new javax.swing.JRadioButton();
        Bat2_1 = new javax.swing.JRadioButton();
        Bat2_2 = new javax.swing.JRadioButton();
        Bat2_3 = new javax.swing.JRadioButton();
        Bat2_4 = new javax.swing.JRadioButton();
        Bat2_5 = new javax.swing.JRadioButton();
        Bat2_6 = new javax.swing.JRadioButton();
        Bat2_7 = new javax.swing.JRadioButton();
        Bat2_8 = new javax.swing.JRadioButton();
        nextballBTN = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        battingtable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bowlingtable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        matchnumber = new javax.swing.JTextField();
        enterBTN = new javax.swing.JButton();
        get_penalty = new javax.swing.JRadioButton();
        penalty_runs = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        bat1_wkt = new javax.swing.JRadioButton();
        bat2_wkt = new javax.swing.JRadioButton();
        caught_name = new javax.swing.JComboBox<>();
        stm_or_thw_name = new javax.swing.JComboBox<>();
        t2_balls1 = new javax.swing.JLabel();
        t2_balls2 = new javax.swing.JLabel();
        wkt_caught = new javax.swing.JRadioButton();
        wkt_stumped = new javax.swing.JRadioButton();
        t2_balls3 = new javax.swing.JLabel();
        wkt_lbw = new javax.swing.JRadioButton();
        t2_balls4 = new javax.swing.JLabel();
        wkt_bowled = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        t2_balls5 = new javax.swing.JLabel();
        t2_balls6 = new javax.swing.JLabel();
        runout_runs = new javax.swing.JComboBox<>();
        t2_balls7 = new javax.swing.JLabel();
        B1_runout_runs = new javax.swing.JRadioButton();
        B2_runout_runs = new javax.swing.JRadioButton();
        t2_balls8 = new javax.swing.JLabel();
        t2_balls9 = new javax.swing.JLabel();
        B1_noball_runs = new javax.swing.JRadioButton();
        B2_noball_runs = new javax.swing.JRadioButton();
        t2_balls10 = new javax.swing.JLabel();
        t2_balls11 = new javax.swing.JLabel();
        t2_balls12 = new javax.swing.JLabel();
        t2_balls13 = new javax.swing.JLabel();
        B1_wdball_runs = new javax.swing.JRadioButton();
        B2_wdball_runs = new javax.swing.JRadioButton();
        B2_lbball_runs = new javax.swing.JRadioButton();
        B1_lbball_runs = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        tourName = new javax.swing.JLabel();
        team1name = new javax.swing.JLabel();
        team2name = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        team1runrate = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        team1total = new javax.swing.JLabel();
        team1wickets = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        team2total = new javax.swing.JLabel();
        team2wickets = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        team2runrate = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        dateandtime = new javax.swing.JLabel();
        t1_overs = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        t1_balls = new javax.swing.JLabel();
        t2_overs = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        t2_balls = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(0, 0, 153));

        jLabel2.setIcon(new javax.swing.ImageIcon("E:\\Java Projects\\CricScore Project\\Photos\\p1.png")); // NOI18N

        exitBTN.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        exitBTN.setForeground(new java.awt.Color(255, 255, 255));
        exitBTN.setText("X");
        exitBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitBTNMouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("User :");

        userEmail.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        userEmail.setForeground(new java.awt.Color(255, 255, 255));
        userEmail.setText("user_email");

        jPanel4.setBackground(new java.awt.Color(0, 0, 204));

        backBTN.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        backBTN.setForeground(new java.awt.Color(255, 255, 255));
        backBTN.setText("Back");
        backBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backBTNMouseExited(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Bowler");

        jLabel19.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Batsman 2");

        jLabel20.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Batsman 1");

        bowlername.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bowlername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bowlernameActionPerformed(evt);
            }
        });

        batsman1name.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        batsman2name.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel21.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 153));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Over :");

        jLabel22.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 153));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Balls :");

        eachballrunbuttonGroup.add(Bat1_0);
        Bat1_0.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_0.setText("0");
        Bat1_0.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_0ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_1);
        Bat1_1.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_1.setText("1");
        Bat1_1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_1ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_2);
        Bat1_2.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_2.setText("2");
        Bat1_2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_2ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_3);
        Bat1_3.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_3.setText("3");
        Bat1_3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_3ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_4);
        Bat1_4.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_4.setText("4");
        Bat1_4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_4ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_5);
        Bat1_5.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_5.setText("5");
        Bat1_5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_5ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_6);
        Bat1_6.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_6.setText("6");
        Bat1_6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_6ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_7);
        Bat1_7.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_7.setText("7");
        Bat1_7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_7ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat1_8);
        Bat1_8.setForeground(new java.awt.Color(255, 255, 255));
        Bat1_8.setText("8");
        Bat1_8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat1_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat1_8ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(wd_ball);
        wd_ball.setForeground(new java.awt.Color(255, 255, 255));
        wd_ball.setText("Wd");
        wd_ball.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        wd_ball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wd_ballActionPerformed(evt);
            }
        });

        nbbuttonGroup.add(no_ball);
        no_ball.setForeground(new java.awt.Color(255, 255, 255));
        no_ball.setText("Nb");
        no_ball.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        no_ball.setPreferredSize(new java.awt.Dimension(43, 21));
        no_ball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no_ballActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(leg_bye);
        leg_bye.setForeground(new java.awt.Color(255, 255, 255));
        leg_bye.setText("Lb/Mf");
        leg_bye.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        leg_bye.setPreferredSize(new java.awt.Dimension(43, 21));
        leg_bye.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leg_byeActionPerformed(evt);
            }
        });

        wd_runs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6" }));
        wd_runs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        batman_nb_runs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6" }));
        batman_nb_runs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        batman_nb_runs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batman_nb_runsActionPerformed(evt);
            }
        });

        lb_runs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6" }));
        lb_runs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        overcount.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        overcount.setForeground(new java.awt.Color(153, 255, 204));
        overcount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        overcount.setText("0");

        ballcount.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        ballcount.setForeground(new java.awt.Color(153, 255, 204));
        ballcount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ballcount.setText("1");

        eachballrunbuttonGroup.add(Bat2_0);
        Bat2_0.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_0.setText("0");
        Bat2_0.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_0ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_1);
        Bat2_1.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_1.setText("1");
        Bat2_1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_1ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_2);
        Bat2_2.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_2.setText("2");
        Bat2_2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_2ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_3);
        Bat2_3.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_3.setText("3");
        Bat2_3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_3ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_4);
        Bat2_4.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_4.setText("4");
        Bat2_4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_4ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_5);
        Bat2_5.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_5.setText("5");
        Bat2_5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_5ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_6);
        Bat2_6.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_6.setText("6");
        Bat2_6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_6ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_7);
        Bat2_7.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_7.setText("7");
        Bat2_7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_7ActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(Bat2_8);
        Bat2_8.setForeground(new java.awt.Color(255, 255, 255));
        Bat2_8.setText("8");
        Bat2_8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bat2_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bat2_8ActionPerformed(evt);
            }
        });

        nextballBTN.setBackground(new java.awt.Color(255, 102, 102));
        nextballBTN.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        nextballBTN.setText("NEXT");
        nextballBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextballBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextballBTNMouseClicked(evt);
            }
        });
        nextballBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextballBTNActionPerformed(evt);
            }
        });

        jPanel3.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N

        battingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Index", "Batsman", "Runs", "Balls", "Minutes", "4s", "6s", "S/R", "Wicket"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        battingtable.setColumnSelectionAllowed(true);
        battingtable.setSelectionForeground(new java.awt.Color(51, 51, 51));
        battingtable.setShowGrid(true);
        jScrollPane1.setViewportView(battingtable);
        battingtable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (battingtable.getColumnModel().getColumnCount() > 0) {
            battingtable.getColumnModel().getColumn(0).setPreferredWidth(45);
            battingtable.getColumnModel().getColumn(1).setPreferredWidth(120);
            battingtable.getColumnModel().getColumn(2).setPreferredWidth(60);
            battingtable.getColumnModel().getColumn(3).setPreferredWidth(60);
            battingtable.getColumnModel().getColumn(4).setPreferredWidth(60);
            battingtable.getColumnModel().getColumn(5).setPreferredWidth(60);
            battingtable.getColumnModel().getColumn(6).setPreferredWidth(60);
            battingtable.getColumnModel().getColumn(7).setPreferredWidth(60);
            battingtable.getColumnModel().getColumn(8).setPreferredWidth(120);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N

        bowlingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Index", "Bowler", "Overs", "Runs", "Wickets", "Econ", "0s", "4s", "6s", "Wd", "Nb"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bowlingtable.setColumnSelectionAllowed(true);
        bowlingtable.setShowGrid(true);
        jScrollPane2.setViewportView(bowlingtable);
        bowlingtable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (bowlingtable.getColumnModel().getColumnCount() > 0) {
            bowlingtable.getColumnModel().getColumn(0).setPreferredWidth(55);
            bowlingtable.getColumnModel().getColumn(1).setPreferredWidth(110);
            bowlingtable.getColumnModel().getColumn(2).setPreferredWidth(45);
            bowlingtable.getColumnModel().getColumn(3).setPreferredWidth(50);
            bowlingtable.getColumnModel().getColumn(4).setPreferredWidth(55);
            bowlingtable.getColumnModel().getColumn(5).setPreferredWidth(45);
            bowlingtable.getColumnModel().getColumn(6).setPreferredWidth(45);
            bowlingtable.getColumnModel().getColumn(7).setPreferredWidth(45);
            bowlingtable.getColumnModel().getColumn(8).setPreferredWidth(45);
            bowlingtable.getColumnModel().getColumn(9).setPreferredWidth(45);
            bowlingtable.getColumnModel().getColumn(10).setPreferredWidth(45);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Match No.");

        matchnumber.setFont(new java.awt.Font("Ebrima", 1, 24)); // NOI18N
        matchnumber.setForeground(new java.awt.Color(255, 0, 51));
        matchnumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        matchnumber.setText("0");

        enterBTN.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        enterBTN.setText("Enter");
        enterBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enterBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterBTNMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(matchnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(enterBTN)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matchnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        penaltybuttonGroup.add(get_penalty);
        get_penalty.setForeground(new java.awt.Color(255, 255, 255));
        get_penalty.setText("PR");
        get_penalty.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        get_penalty.setPreferredSize(new java.awt.Dimension(43, 21));
        get_penalty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                get_penaltyActionPerformed(evt);
            }
        });

        penalty_runs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6" }));
        penalty_runs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel23.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 153));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Mark Scores to");

        eachballrunbuttonGroup.add(bat1_wkt);
        bat1_wkt.setForeground(new java.awt.Color(255, 255, 255));
        bat1_wkt.setText("Wkt1");
        bat1_wkt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bat1_wkt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bat1_wktActionPerformed(evt);
            }
        });

        eachballrunbuttonGroup.add(bat2_wkt);
        bat2_wkt.setForeground(new java.awt.Color(255, 255, 255));
        bat2_wkt.setText("Wkt2");
        bat2_wkt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bat2_wkt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bat2_wktActionPerformed(evt);
            }
        });

        caught_name.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        stm_or_thw_name.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        t2_balls1.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls1.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls1.setText("Caught");

        t2_balls2.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls2.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        t2_balls2.setText("Stumped/Thw");

        wickettypebuttonGroup.add(wkt_caught);

        wickettypebuttonGroup.add(wkt_stumped);

        t2_balls3.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls3.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        t2_balls3.setText("LBW");

        wickettypebuttonGroup.add(wkt_lbw);

        t2_balls4.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls4.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        t2_balls4.setText("Bowled");

        wickettypebuttonGroup.add(wkt_bowled);

        t2_balls5.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls5.setText("If Runout");

        t2_balls6.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls6.setText("B1");

        runout_runs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "0", "1", "2", "3", "4", "5", "6" }));
        runout_runs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        t2_balls7.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls7.setText("B2");

        runoutplayerbuttonGroup1.add(B1_runout_runs);

        runoutplayerbuttonGroup1.add(B2_runout_runs);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(t2_balls5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(t2_balls6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B1_runout_runs))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(t2_balls7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B2_runout_runs)))
                .addGap(8, 8, 8)
                .addComponent(runout_runs, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t2_balls6)
                    .addComponent(B1_runout_runs, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t2_balls7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B2_runout_runs, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(4, 4, 4))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(runout_runs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(t2_balls5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        t2_balls8.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls8.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls8.setText("B1");

        t2_balls9.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls9.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls9.setText("B2");

        nbbatsmanrunsbuttonGroup1.add(B1_noball_runs);
        B1_noball_runs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1_noball_runsActionPerformed(evt);
            }
        });

        nbbatsmanrunsbuttonGroup1.add(B2_noball_runs);
        B2_noball_runs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2_noball_runsActionPerformed(evt);
            }
        });

        t2_balls10.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls10.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls10.setText("B1");

        t2_balls11.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls11.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls11.setText("B2");

        t2_balls12.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls12.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls12.setText("B1");

        t2_balls13.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls13.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        t2_balls13.setText("B2");

        wdrunsbuttonGroup.add(B1_wdball_runs);

        wdrunsbuttonGroup.add(B2_wdball_runs);

        lbrunsbuttonGroup.add(B2_lbball_runs);

        lbrunsbuttonGroup.add(B1_lbball_runs);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(batsman2name, 0, 126, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bowlername, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(batsman1name, 0, 126, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(Bat2_0)
                                .addGap(10, 10, 10)
                                .addComponent(Bat2_1)
                                .addGap(10, 10, 10)
                                .addComponent(Bat2_2)
                                .addGap(10, 10, 10)
                                .addComponent(Bat2_3)
                                .addGap(10, 10, 10)
                                .addComponent(Bat2_4)
                                .addGap(10, 10, 10)
                                .addComponent(Bat2_5)
                                .addGap(10, 10, 10)
                                .addComponent(Bat2_6)
                                .addGap(10, 10, 10)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t2_balls2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(wkt_stumped)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(stm_or_thw_name, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t2_balls3)
                                            .addComponent(wkt_lbw))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t2_balls4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(wkt_bowled)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(Bat2_7)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat2_8))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel21)
                                        .addGap(2, 2, 2)
                                        .addComponent(overcount, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ballcount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(Bat1_0)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_1)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_2)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_3)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_4)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_5)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_6)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_7)
                                        .addGap(10, 10, 10)
                                        .addComponent(Bat1_8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(bat1_wkt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                                        .addGap(8, 8, 8)
                                                        .addComponent(wd_ball, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(no_ball, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(t2_balls10)
                                                        .addGap(14, 14, 14)
                                                        .addComponent(t2_balls11))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                                .addComponent(bat2_wkt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(9, 9, 9)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                                        .addComponent(B1_wdball_runs)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(B2_wdball_runs)
                                                        .addGap(68, 68, 68))
                                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                                        .addComponent(wd_runs, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(batman_nb_runs, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addComponent(B1_noball_runs)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(B2_noball_runs))
                                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addComponent(t2_balls8)
                                                                .addGap(14, 14, 14)
                                                                .addComponent(t2_balls9)))))))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(leg_bye, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(t2_balls12)
                                        .addGap(18, 18, 18)
                                        .addComponent(t2_balls13))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(B1_lbball_runs)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(B2_lbball_runs))
                                        .addComponent(lb_runs, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(penalty_runs, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(get_penalty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextballBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(251, 251, 251)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t2_balls1)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(wkt_caught)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(caught_name, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backBTN)
                .addGap(531, 531, 531))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(bowlername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(17, 17, 17))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(overcount, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ballcount, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(wd_ball)
                                    .addComponent(no_ball, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(leg_bye, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(get_penalty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(batsman1name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Bat1_0)
                                    .addComponent(Bat1_1)
                                    .addComponent(Bat1_2)
                                    .addComponent(Bat1_3)
                                    .addComponent(Bat1_4)
                                    .addComponent(Bat1_5)
                                    .addComponent(Bat1_6)
                                    .addComponent(Bat1_7)
                                    .addComponent(Bat1_8)
                                    .addComponent(penalty_runs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bat1_wkt)
                                    .addComponent(t2_balls8)
                                    .addComponent(t2_balls9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(t2_balls10)
                                    .addComponent(t2_balls11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(t2_balls12)
                                    .addComponent(t2_balls13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(batsman2name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Bat2_0)
                                            .addComponent(Bat2_1)
                                            .addComponent(Bat2_2)
                                            .addComponent(Bat2_3)
                                            .addComponent(Bat2_4)
                                            .addComponent(Bat2_5)
                                            .addComponent(Bat2_6)
                                            .addComponent(Bat2_7)
                                            .addComponent(Bat2_8)
                                            .addComponent(bat2_wkt))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(B2_noball_runs)
                                                    .addComponent(B2_lbball_runs)
                                                    .addComponent(B1_lbball_runs))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(batman_nb_runs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(wd_runs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lb_runs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(B1_wdball_runs)
                                                    .addComponent(B2_wdball_runs))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(69, 69, 69))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(B1_noball_runs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(t2_balls1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t2_balls2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t2_balls3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t2_balls4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(caught_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wkt_caught))
                                    .addComponent(stm_or_thw_name)
                                    .addComponent(wkt_stumped, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(wkt_lbw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(wkt_bowled, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(8, 8, 8))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextballBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(backBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tournament Name :");

        tourName.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        tourName.setForeground(new java.awt.Color(255, 255, 255));
        tourName.setText("tour_name");

        team1name.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        team1name.setForeground(new java.awt.Color(255, 255, 255));
        team1name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team1name.setText("Team 1");

        team2name.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        team2name.setForeground(new java.awt.Color(255, 255, 255));
        team2name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team2name.setText("Team 2");

        team1runrate.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        team1runrate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team1runrate.setText("0.00");

        jLabel8.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel8.setText("RunRate :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel8)
                .addGap(3, 3, 3)
                .addComponent(team1runrate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel8)
                .addComponent(team1runrate))
        );

        team1total.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        team1total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team1total.setText("00");

        team1wickets.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        team1wickets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team1wickets.setText("0");

        jLabel13.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("/");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(team1total, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(team1wickets, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(team1total, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(team1wickets, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        team2total.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        team2total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team2total.setText("00");

        team2wickets.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        team2wickets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team2wickets.setText("0");

        jLabel16.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("/");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(team2total, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(team2wickets, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(team2total, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(team2wickets, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        team2runrate.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        team2runrate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        team2runrate.setText("0.00");

        jLabel18.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel18.setText("RunRate :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jLabel18)
                .addGap(3, 3, 3)
                .addComponent(team2runrate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel18)
                .addComponent(team2runrate))
        );

        dateandtime.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        dateandtime.setForeground(new java.awt.Color(255, 255, 255));
        dateandtime.setText("Date and Time");

        t1_overs.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t1_overs.setForeground(new java.awt.Color(255, 255, 255));
        t1_overs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t1_overs.setText("00");

        jLabel26.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText(".");

        t1_balls.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t1_balls.setForeground(new java.awt.Color(255, 255, 255));
        t1_balls.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t1_balls.setText("0");

        t2_overs.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_overs.setForeground(new java.awt.Color(255, 255, 255));
        t2_overs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t2_overs.setText("00");

        jLabel29.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText(".");

        t2_balls.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        t2_balls.setForeground(new java.awt.Color(255, 255, 255));
        t2_balls.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t2_balls.setText("0");

        twoteamsbuttonGroup.add(jRadioButton1);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        twoteamsbuttonGroup.add(jRadioButton2);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(team1name)))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(team2name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(t1_overs)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel26)
                        .addGap(2, 2, 2)
                        .addComponent(t1_balls)
                        .addGap(95, 95, 95)
                        .addComponent(t2_overs)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel29)
                        .addGap(2, 2, 2)
                        .addComponent(t2_balls)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateandtime)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userEmail))
                    .addComponent(exitBTN)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tourName)))
                .addGap(5, 5, 5))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(exitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(team1name, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(team2name, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jRadioButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(userEmail))
                                .addGap(1, 1, 1)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(tourName))
                                .addGap(10, 10, 10)
                                .addComponent(dateandtime))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(t2_overs, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(t2_balls, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(t1_overs, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(t1_balls, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    Connection Con = null, Con1 = null;
    PreparedStatement pst = null, pst1 = null;
    ResultSet Rs = null, Rs1 = null, Rs2 = null;
    Statement St = null, St1 = null, St2 = null, St3 = null, St4 = null;
    
    public void displayTime(){
        new Timer(0, new ActionListener(){
          @Override
          public void actionPerformed(ActionEvent e){
              java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat("HH:mm:ss");
              String text_displaytime = simpleDateFormat.format(new Date());
              String text_displaydate = new SimpleDateFormat("dd/MM/yyyy",Locale.ENGLISH).format(new Date());
              dateandtime.setText(text_displaydate + " | " +text_displaytime);
          }
        }).start();
    }
    
    private void updatebattingtablewicket(){
        DefaultTableModel model = (DefaultTableModel)battingtable.getModel();
        String Query1 = "SELECT COUNT(*) AS `outplayerscount`  FROM `scorecard_main` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Wicket = '1'";
        String Query2 = "SELECT OutPlayer, Bowler, CaughtPlayer, StumpedPlayer, Got_LBW, Got_Bowled  FROM `scorecard_main` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Wicket = '1'";
        String Query3 = "SELECT COUNT( DISTINCT Batsman) as teamplayedcount FROM `scorecard_main` WHERE TournamentName = '"+ tourname +"' AND MatchNumber='1' AND BattingTeam = '"+ battingteam +"'";
        try {
            //Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query1);
            Rs.next();
            int outplayerscount = Rs.getInt("outplayerscount");
            System.out.println("Out players count = " + outplayerscount);
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                St1 = Con.createStatement();
                Rs = St1.executeQuery(Query2);
                while(Rs.next()){
                    String outplayer = Rs.getString(1);
                    String bowler = Rs.getString(2);
                    String caughtplayer = Rs.getString(3);                    
                    String stumpedplayer = Rs.getString(4);                    
                    String gotlbw = Rs.getString(5);                    
                    String gotbowled = Rs.getString(6);                    
                    System.out.println("Out player ="+outplayer+" Bowler ="+bowler+" Caught Player ="+caughtplayer+" Stump ="+stumpedplayer+" LBW="+gotlbw+" Bowled="+gotbowled);
                    
                    for (int i = 0; i <= outplayerscount; i++) {
                        Object ob = battingtable.getModel().getValueAt(i, 1);
                        String batsmanintable = String.valueOf(ob);
                        System.out.println("Did not found out player " + batsmanintable);
                        System.out.println("Out player should be " + outplayer);    
                        
                        if (outplayer.equals(batsmanintable)) {
                            Object object = (Object) batsmanintable;
                            System.out.println("Found Out Player in table ar row - " + i);
                            if(!(caughtplayer.equals("0"))){
                                model.setValueAt("b: "+bowler+ " , c: " + caughtplayer, i, 8);
                            }
                            if(!(stumpedplayer.equals("0"))){
                                model.setValueAt("b: "+bowler+ " , st/thr: " + stumpedplayer, i, 8);
                            }
                            if(!(gotlbw.equals("0"))){
                                model.setValueAt("lbw: "+gotlbw , i, 8);
                            }
                            if(!(gotbowled.equals("0"))){
                                model.setValueAt("b: "+gotbowled , i, 8);
                            }                            
                        }                           
                    }
                    
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e); 
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
        
        try {
            DefaultTableModel model2 = (DefaultTableModel)battingtable.getModel();
            //Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query3);
            Rs.next();
            int teamplayedcount = Rs.getInt("teamplayedcount");
            for (int i = 0; i < teamplayedcount; i++) {
                Object obj = battingtable.getModel().getValueAt(i, 8);
                String batsmanintable = String.valueOf(obj);
                if(batsmanintable.equals("null")){
                    model2.setValueAt("not out", i, 8);
                }
            }
        } catch (Exception e) {
        }
        
    }
    
    private void updatebattingtable(){
        DefaultTableModel model = (DefaultTableModel)battingtable.getModel();
        
        String Query1 = "SELECT Batsman FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"'";
        try{
        ArrayList<String> battinglist= new ArrayList<String>();
        //Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
        St = Con.createStatement();
        Rs = St.executeQuery(Query1);
        while (Rs.next()) {
            battinglist.add(Rs.getString(1));            
            System.out.println("Duplicates List "+ battinglist);
            Object[] st = battinglist.toArray();
              for (Object s : st) {
                if (battinglist.indexOf(s) != battinglist.lastIndexOf(s)) {
                    battinglist.remove(battinglist.lastIndexOf(s));
                 }
              }
            System.out.println("Distinct List "+ battinglist); 
            
            for (int i = 0; i < battinglist.size(); i++) {                
                model.setValueAt(battinglist.get(i), i, 1);
                
                String facingbat = battinglist.get(i);
                
                String Query2 = "SELECT SUM(Runs) AS batsmanmain FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Batsman = '"+ facingbat +"'";
                String Query3 = "SELECT SUM(Batsman_RunsTo_Nb) AS batsmannbextra FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND FacingBatsman = '"+ facingbat +"'";
                String Query4 = "SELECT COUNT(*) AS `batsmanballsmain`  FROM `scorecard_main`  WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Batsman = '"+ facingbat +"'";
                String Query5 = "SELECT COUNT(*) AS batsmanballextra FROM `scorecard_extra` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND FacingBatsman = '"+ facingbat +"' AND (Lb = '1' OR Nb = '1') ";
                String Query6 = "SELECT COUNT(*) AS `batsman4smain`  FROM `scorecard_main`  WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Batsman = '"+ facingbat +"' AND Runs = '4' ";
                String Query7 = "SELECT COUNT(*) AS batsman4extra FROM `scorecard_extra` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND FacingBatsman = '"+ facingbat +"' AND Batsman_RunsTo_Nb  = '4' ";
                String Query8 = "SELECT COUNT(*) AS `batsman6smain`  FROM `scorecard_main`  WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Batsman = '"+ facingbat +"' AND Runs = '6' ";
                String Query9 = "SELECT COUNT(*) AS `batsman6extra` FROM `scorecard_extra` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND FacingBatsman = '"+ facingbat +"' AND Batsman_RunsTo_Nb  = '6' ";
                String Query10 = "SELECT MIN(DateTime) AS `minbattime` FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Batsman = '"+ facingbat +"'";
                String Query11 = "SELECT MAX(DateTime) AS `maxbattime` FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Batsman = '"+ facingbat +"'";
                //String Query10 = "SELECT Batsman AS `outbatsman` FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Batsman = '"+ facingbat +"' AND Wicket = '1' ";
                
                //String Query4 = "SELECT COUNT(*) AS rowcount4 FROM `scorecard_extra` where TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"' AND Runs_to_Lb = '"+ 1 +"' ";
                
                try {

                    //Con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query2);
                    Rs1.next();
                    int batsmanmaintot = Rs1.getInt("batsmanmain");
                    //Rs.close();
                    
                    //Con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query3);
                    Rs1.next();
                    int batsmanextratot = Rs1.getInt("batsmannbextra");
                    //Rs.close();                                   
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query4);
                    Rs1.next();
                    int batsmanmainballcount = Rs1.getInt("batsmanballsmain");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query5);
                    Rs1.next();
                    int batsmanextraballcount = Rs1.getInt("batsmanballextra"); 
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query6);
                    Rs1.next();
                    int batsmanmain4count = Rs1.getInt("batsman4smain");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query7);
                    Rs1.next();
                    int batsmanextra4count = Rs1.getInt("batsman4extra");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query8);
                    Rs1.next();
                    int batsmanmain6count = Rs1.getInt("batsman6smain");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query9);
                    Rs1.next();
                    int batsmanextra6count = Rs1.getInt("batsman6extra");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query10);
                    Rs1.next();
                    Timestamp minbattime = Rs1.getTimestamp("minbattime");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query11);
                    Rs1.next();
                    Timestamp maxbattime = Rs1.getTimestamp("maxbattime");
                    
                    String timeStamp1 = minbattime.toString();
                    String timeStamp2 = maxbattime.toString();
                    
                    System.out.println("Min Time = " + timeStamp1);
                    System.out.println("Max Time = " + timeStamp2);
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    Date date1 = sdf.parse(timeStamp1);
                    Date date2 = sdf.parse(timeStamp2);
                    long difference = date2.getTime() - date1.getTime();
                    System.out.println("TTTTTTTTTTTTTTTTTTTTTTTT :::::: ->" + difference/(60000));
                    model.setValueAt((difference/(60000)), i, 4);
                    
                    //Set batsman 6 count
                    int batsman6count = batsmanmain6count + batsmanextra6count;
                    model.setValueAt((batsman6count), i, 6);
                    
                    //Set batsman 4 count
                    int batsman4count = batsmanmain4count + batsmanextra4count;
                    model.setValueAt((batsman4count), i, 5);
                    
                    //Set batsman face ball count
                    int batsmanballcount = batsmanmainballcount + batsmanextraballcount;
                    model.setValueAt((batsmanballcount), i, 3);
                    
                    //set Batsman Runs
                    int batsmanruns = batsmanmaintot+batsmanextratot;  
                    model.setValueAt((i+1), i, 0);
                    model.setValueAt(batsmanruns, i, 2);
                    
                    //Set batsman Strike rate
                    double batsmanstrikerate = ((double)batsmanruns*100/(double)batsmanballcount);
                    model.setValueAt(String.format("%.2f", batsmanstrikerate), i, 7);

    
                    
                } catch (Exception e) {
                    //JOptionPane.showMessageDialog(this, e); 
                }
            }
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
    }
    
    
    
    private void updatebowlingtable(){
        DefaultTableModel model = (DefaultTableModel)bowlingtable.getModel();
        
        String Query1 = "SELECT Bowler FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"'";
        try{
        ArrayList<String> bowlinglist= new ArrayList<String>();
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
        St = Con.createStatement();
        Rs = St.executeQuery(Query1);
        while (Rs.next()) {
            bowlinglist.add(Rs.getString(1));            
            System.out.println("Duplicates List "+ bowlinglist);
            Object[] st = bowlinglist.toArray();
              for (Object s : st) {
                if (bowlinglist.indexOf(s) != bowlinglist.lastIndexOf(s)) {
                    bowlinglist.remove(bowlinglist.lastIndexOf(s));
                 }
              }
            System.out.println("Distinct List "+ bowlinglist); 
            
            for (int i = 0; i < bowlinglist.size(); i++) {                
                model.setValueAt(bowlinglist.get(i), i, 1);
                
                String facingbowler = bowlinglist.get(i);
                
                String Query2 = "SELECT COUNT(*) AS `bowlermainballs`  FROM `scorecard_main`  WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query3 = "SELECT COUNT(*) AS `bowlerextraballs` FROM `scorecard_extra` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"' AND Lb = '1'";
                String Query4 = "SELECT SUM(Runs) AS `bowlergivenmain` FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query5 = "SELECT SUM(Runs_to_Wd_Ball) AS `bowlerwide` FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query6 = "SELECT SUM(Nb) AS `bowlernb` FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query7 = "SELECT SUM(Batsman_RunsTo_Nb) AS `bowlerbatnbruns` FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query8 = "SELECT SUM(Lb) AS `bowlerlb` FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query9 = "SELECT SUM(Runs_to_Lb) AS `bowlerbatlbruns` FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query10 = "SELECT SUM(Panelty_Runs) AS `bowlerpanelty` FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query11 = "SELECT SUM(Wicket) AS `bowlerwickets` FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"'";
                String Query12 = "SELECT COUNT(*) AS `main0runscount`  FROM `scorecard_main`  WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"' AND Runs = '0' ";
                String Query13 = "SELECT COUNT(*) AS `extra0runscount` FROM `scorecard_extra` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"' AND Lb = '1'";
                String Query14 = "SELECT COUNT(*) AS `main4runscount`  FROM `scorecard_main`  WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"' AND Runs = '4' ";
                String Query15 = "SELECT COUNT(*) AS `main6runscount`  FROM `scorecard_main`  WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"' AND Runs = '6' ";
                String Query16 = "SELECT COUNT(*) AS `extrawdrunscount` FROM `scorecard_extra` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"' AND (Runs_to_Wd_Ball = '1' OR "
                        + "Runs_to_Wd_Ball = '2' OR Runs_to_Wd_Ball = '3' OR Runs_to_Wd_Ball = '4' OR Runs_to_Wd_Ball = '5' OR Runs_to_Wd_Ball = '6' OR Runs_to_Wd_Ball = '7' OR Runs_to_Wd_Ball = '8')";
                String Query17 = "SELECT COUNT(*) AS `extranbrunscount` FROM `scorecard_extra` WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ battingteam +"' AND Bowler = '"+ facingbowler +"' AND Nb = '1'";
                
                try {       
                    model.setValueAt((i+1), i, 0);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query2);
                    Rs1.next();
                    int bowlermainballs = Rs1.getInt("bowlermainballs");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query3);
                    Rs1.next();
                    int bowlerextraballs = Rs1.getInt("bowlerextraballs");
                    
                    int bowlerballcount = bowlermainballs + bowlerextraballs;
                    int balls = bowlerballcount%ballsperover;
                    int overs = bowlerballcount/ballsperover;
                    
                    System.out.println("Balls = " + balls + " Overs = "+ overs);
                    model.setValueAt((overs +"."+balls), i, 2);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query4);
                    Rs1.next();
                    int bowlergivenmain = Rs1.getInt("bowlergivenmain");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query5);
                    Rs1.next();
                    int bowlerwide = Rs1.getInt("bowlerwide");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query6);
                    Rs1.next();
                    int bowlernb = Rs1.getInt("bowlernb");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query7);
                    Rs1.next();
                    int bowlerbatnbruns = Rs1.getInt("bowlerbatnbruns");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query8);
                    Rs1.next();
                    int bowlerlb = Rs1.getInt("bowlerlb");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query9);
                    Rs1.next();
                    int bowlerbatlbruns = Rs1.getInt("bowlerbatlbruns");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query10);
                    Rs1.next();
                    int bowlerpanelty = Rs1.getInt("bowlerpanelty");
                    
                    int bowlergivenruns = bowlergivenmain + bowlerwide + bowlernb + bowlerbatnbruns + bowlerpanelty;
                    model.setValueAt(bowlergivenruns, i, 3);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query11);
                    Rs1.next();
                    int bowlerwickets = Rs1.getInt("bowlerwickets");
                    model.setValueAt(bowlerwickets, i, 4);
                    
                    double bowlerecon = ((double)bowlergivenruns/((double)overs + ((double)balls)/10));
                    model.setValueAt(String.format("%.2f", bowlerecon), i, 5);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query12);
                    Rs1.next();
                    int main0runscount = Rs1.getInt("main0runscount");
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query13);
                    Rs1.next();
                    int extra0runscount = Rs1.getInt("extra0runscount");
                    
                    int bowler0runs = main0runscount + extra0runscount;
                    model.setValueAt(bowler0runs, i, 6);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query14);
                    Rs1.next();
                    int main4runscount = Rs1.getInt("main4runscount");
                    model.setValueAt(main4runscount, i, 7);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query15);
                    Rs1.next();
                    int main6runscount = Rs1.getInt("main6runscount");
                    model.setValueAt(main6runscount, i, 8);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query16);
                    Rs1.next();
                    int extrawdrunscount = Rs1.getInt("extrawdrunscount");
                    model.setValueAt(extrawdrunscount, i, 9);
                    
                    St1 = Con.createStatement();
                    Rs1 = St1.executeQuery(Query17);
                    Rs1.next();
                    int extranbrunscount = Rs1.getInt("extranbrunscount");
                    model.setValueAt(extranbrunscount, i, 10);
                    
//
//                    //Con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query2);
//                    Rs1.next();
//                    int batsmanmaintot = Rs1.getInt("batsmanmain");
//                    //Rs.close();
//                    
//                    //Con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query3);
//                    Rs1.next();
//                    int batsmanextratot = Rs1.getInt("batsmannbextra");
//                    //Rs.close();                                   
//                    
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query4);
//                    Rs1.next();
//                    int batsmanmainballcount = Rs1.getInt("batsmanballsmain");
//                    
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query5);
//                    Rs1.next();
//                    int batsmanextraballcount = Rs1.getInt("batsmanballextra"); 
//                    
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query6);
//                    Rs1.next();
//                    int batsmanmain4count = Rs1.getInt("batsman4smain");
//                    
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query7);
//                    Rs1.next();
//                    int batsmanextra4count = Rs1.getInt("batsman4extra");
//                    
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query8);
//                    Rs1.next();
//                    int batsmanmain6count = Rs1.getInt("batsman6smain");
//                    
//                    St1 = Con.createStatement();
//                    Rs1 = St1.executeQuery(Query9);
//                    Rs1.next();
//                    int batsmanextra6count = Rs1.getInt("batsman6extra");
//                    
//                    
//                    //Set batsman 6 count
//                    int batsman6count = batsmanmain6count + batsmanextra6count;
//                    model.setValueAt((batsman6count), i, 6);
//                    
//                    //Set batsman 4 count
//                    int batsman4count = batsmanmain4count + batsmanextra4count;
//                    model.setValueAt((batsman4count), i, 5);
//                    
//                    //Set batsman face ball count
//                    int batsmanballcount = batsmanmainballcount + batsmanextraballcount;
//                    model.setValueAt((batsmanballcount), i, 3);
//                    
//                    //set Batsman Runs
//                    int batsmanruns = batsmanmaintot+batsmanextratot;  
//                    model.setValueAt((i+1), i, 0);
//                    model.setValueAt(batsmanruns, i, 2);
//                    
//                    //Set batsman Strike rate
//                    double batsmanstrikerate = ((double)batsmanruns*100/(double)batsmanballcount);
//                    model.setValueAt(String.format("%.2f", batsmanstrikerate), i, 7);
//
//    
//                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e); 
                }
            }
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
        
        
        
//        DefaultTableModel model = (DefaultTableModel)bowlingtable.getModel();
//        String Query1 = "SELECT Bowler FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BowlingTeam = '"+ bowlingteam +"'";
//        try{
//            HashSet<String> bowlingHashSet = new HashSet<String>();     
//            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
//            St = Con.createStatement();
//            Rs = St.executeQuery(Query1);
//            while (Rs.next()) {
//                bowlingHashSet.add(Rs.getString(1));
//                Iterator bowlingIterator = bowlingHashSet.iterator();
//                while(bowlingIterator.hasNext()){
//                    for(int i=0; i<bowlingHashSet.size(); i++){
//                        model.setValueAt(bowlingIterator.next(), i, 1);
//                    }
//
//                }
//            }
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, e); 
//        } 
    }
    
    int numofteamplayers;
    int overscount;
    int ballsperover;
    private void numofovers(){
        System.out.println("------------TOUR NAME = " + tourname + "Batting team = " + battingteam);
        //String Query = "Select * from teamnames where TournamentName = '"+ tourname +"' AND TeamName = '"+ battingteam +"' ";
        String Query = "Select * from teamnames where TournamentName = '"+ tourname +"' AND TeamName = '"+ battingteam +"' ";
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query);
            if (Rs.next()) {
                numofteamplayers = Rs.getInt(4);
                overscount = Rs.getInt(5);
                ballsperover = Rs.getInt(6);
                JOptionPane.showMessageDialog(this, numofteamplayers);
                JOptionPane.showMessageDialog(this, overscount);
                JOptionPane.showMessageDialog(this, ballsperover);
            }//else{
             //   JOptionPane.showMessageDialog(this, "Loading Error");
            //}
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
        
    }
    
    private void exitBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBTNMouseClicked
        System.exit(1);
    }//GEN-LAST:event_exitBTNMouseClicked

    private void exitBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBTNMouseEntered
        exitBTN.setBounds(800,0,30,30);
        exitBTN.setBackground(Color.red);
        exitBTN.setOpaque(true);
        this.setVisible(true);
    }//GEN-LAST:event_exitBTNMouseEntered

    private void exitBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBTNMouseExited
        exitBTN.setBackground(new Color(0,0,153));
        this.setVisible(true);
    }//GEN-LAST:event_exitBTNMouseExited

    private void backBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBTNMouseClicked
        new RoundRobin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBTNMouseClicked

    private void backBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBTNMouseEntered
        backBTN.setForeground(Color.RED);
    }//GEN-LAST:event_backBTNMouseEntered

    private void backBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBTNMouseExited
        backBTN.setForeground(Color.white);
    }//GEN-LAST:event_backBTNMouseExited

    private void Bat1_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_0ActionPerformed

    private void Bat1_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_1ActionPerformed

    private void Bat1_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_2ActionPerformed

    private void Bat1_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_3ActionPerformed

    private void Bat1_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_4ActionPerformed

    private void Bat1_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_5ActionPerformed

    private void Bat1_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_6ActionPerformed

    private void Bat1_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_7ActionPerformed

    private void Bat1_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat1_8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat1_8ActionPerformed

    private void bowlernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bowlernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bowlernameActionPerformed

    private void wd_ballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wd_ballActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wd_ballActionPerformed

    private void no_ballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no_ballActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no_ballActionPerformed

    private void leg_byeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leg_byeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leg_byeActionPerformed

    private void Bat2_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_0ActionPerformed

    private void Bat2_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_1ActionPerformed

    private void Bat2_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_2ActionPerformed

    private void Bat2_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_3ActionPerformed

    private void Bat2_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_4ActionPerformed

    private void Bat2_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_5ActionPerformed

    private void Bat2_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_6ActionPerformed

    private void Bat2_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_7ActionPerformed

    private void Bat2_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bat2_8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bat2_8ActionPerformed

    private void nextballBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextballBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nextballBTNActionPerformed

    private void get_penaltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_get_penaltyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_get_penaltyActionPerformed

    int matchnum;
    private void enterBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterBTNMouseClicked
        matchnum = Integer.valueOf(matchnumber.getText());
        getteam1Name(matchnum);
        getteam2Name(matchnum);
        //updatebattingtable();
    }//GEN-LAST:event_enterBTNMouseClicked

    String battingteam;
    String bowlingteam;
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        battingteam = team1;
        bowlingteam = team2;
        JOptionPane.showMessageDialog(this, team1 + " Batting");
        setbowlingTeam(team2);
        setbattingTeam(team1);
        numofovers();
        cleartable1();
        cleartable2();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void cleartable1(){
        DefaultTableModel model = (DefaultTableModel)battingtable.getModel();
        for (int i = 0; i < 11; i++) {
            for (int j = 0; j < 9; j++) {
                model.setValueAt("", i, j);
            }            
        }
      
    }
    
    private void cleartable2(){
        DefaultTableModel model = (DefaultTableModel)bowlingtable.getModel();
        for (int i = 0; i < 11; i++) {
            for (int j = 0; j < 11; j++) {
                model.setValueAt("", i, j);
            }            
        }
      
    }
    
    private void setbattingTeam(String team){
        try{
        ArrayList<String> list= new ArrayList<String>();
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
        St = Con.createStatement();
        Rs = St.executeQuery("SELECT PlayerName FROM playername WHERE TeamName = '"+ team +"'");
        while (Rs.next()) {
            list.add(Rs.getString(1));
        }
        batsman1name.removeAllItems();
        batsman2name.removeAllItems();
        for (String i : list) {
            batsman1name.addItem(i);
            batsman2name.addItem(i);
        }batsman1name.setSelectedIndex(-1);
        batsman2name.setSelectedIndex(-1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
    }
    
    private void setbowlingTeam(String team){
        try{
        ArrayList<String> list= new ArrayList<String>();
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
        St = Con.createStatement();
        Rs = St.executeQuery("SELECT PlayerName FROM playername WHERE TeamName = '"+ team +"'");
        while (Rs.next()) {
        list.add(Rs.getString(1));
        }
        bowlername.removeAllItems();
        caught_name.removeAllItems();
        stm_or_thw_name.removeAllItems();
        //runout_B1_runs.removeAllItems();
        //runout_B2_runs.removeAllItems();
        for (String i : list) {
            bowlername.addItem(i);
            caught_name.addItem(i);
            stm_or_thw_name.addItem(i);
        }caught_name.setSelectedIndex(-1);
        stm_or_thw_name.setSelectedIndex(-1);
        bowlername.setSelectedIndex(-1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
    }
    
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        battingteam = team2;
        bowlingteam = team1;
        JOptionPane.showMessageDialog(this, team2 + " Batting");
        setbowlingTeam(team1);
        setbattingTeam(team2); 
        numofovers();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void bat1_wktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bat1_wktActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bat1_wktActionPerformed

    private void bat2_wktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bat2_wktActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bat2_wktActionPerformed

    private void batman_nb_runsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batman_nb_runsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_batman_nb_runsActionPerformed

    String bowler;
    String batsman1;
    String batsman2;
    String caughtplayer;
    String stumpedplayer;
    private void getplayers(){
        bowler = bowlername.getSelectedItem().toString();
        batsman1 = batsman1name.getSelectedItem().toString();
        batsman2 = batsman2name.getSelectedItem().toString();
    }
    
    int t1gooddeliverycount;
    int t2gooddeliverycount;
    int t1currentovercount;
    int t1currentballcount;
    int t2currentovercount;
    int t2currentballcount;
    int t1waitingdelivery;
    int t2waitingdelivery;
    private void currentmatchData1(){
  
        System.out.println("Balls per over = " + ballsperover);
        int rowcount1 = 0;
        int rowcount2 = 0;
        int rowcount3 = 0;
        int rowcount4 = 0;
        
        String Query1 = "SELECT COUNT(*) AS rowcount1 FROM `scorecard_main` where TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"' ";
        String Query2 = "SELECT COUNT(*) AS rowcount2 FROM `scorecard_main` where TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"' ";
        String Query3 = "SELECT COUNT(*) AS rowcount3 FROM `scorecard_extra` where TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"' AND Runs_to_Lb = '"+ 1 +"' ";
        String Query4 = "SELECT COUNT(*) AS rowcount4 FROM `scorecard_extra` where TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"' AND Runs_to_Lb = '"+ 1 +"' ";
        //String Query1 = "SELECT COUNT(*) AS rowcount1 FROM `scorecard_main` where TournamentName = 'LPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"' ";
        //String Query2 = "SELECT COUNT(*) AS rowcount2 FROM `scorecard_main` where TournamentName = 'LPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"' ";
        //String Query3 = "SELECT COUNT(*) AS rowcount3 FROM `scorecard_extra` where TournamentName = 'LPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"' AND Runs_to_Lb = '"+ 1 +"' ";
        //String Query4 = "SELECT COUNT(*) AS rowcount4 FROM `scorecard_extra` where TournamentName = 'LPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"' AND Runs_to_Lb = '"+ 1 +"' ";
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query1);
            Rs.next();
            rowcount1 = Rs.getInt("rowcount1");
            Rs.close();
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query2);
            Rs.next();
            rowcount2 = Rs.getInt("rowcount2");
            Rs.close();
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query3);
            Rs.next();
            rowcount3 = Rs.getInt("rowcount3");
            //JOptionPane.showMessageDialog(this, rowcount); 
            Rs.close();
            
            t1gooddeliverycount = rowcount1 + rowcount3;
            if(t1gooddeliverycount == 0){
                t1_overs.setText("0");
                t1_balls.setText("0");
            }else{
                t1currentovercount = t1gooddeliverycount/ballsperover;
                t1currentballcount = t1gooddeliverycount%ballsperover;
                t1_overs.setText("" + t1currentovercount);
                t1_balls.setText("" + t1currentballcount);
            }
       
            t1waitingdelivery = t1gooddeliverycount + 1;
            
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query4);
            Rs.next();
            rowcount4 = Rs.getInt("rowcount4");
            //JOptionPane.showMessageDialog(this, rowcount); 
            Rs.close();
            
            t2gooddeliverycount = rowcount2 + rowcount4;
            if(t2gooddeliverycount == 0){
                t2_overs.setText("0");
                t2_balls.setText("0");
            }else{
                t2currentovercount = t2gooddeliverycount/ballsperover;
                t2currentballcount = t2gooddeliverycount%ballsperover;
                t2_overs.setText("" + t2currentovercount);
                t2_balls.setText("" + t2currentballcount);
            }
            
            t2waitingdelivery = t2gooddeliverycount + 1;
            
            if(team1 == battingteam){
                overcount.setText(""+t1waitingdelivery/ballsperover);
                ballcount.setText(""+t1waitingdelivery%ballsperover);
            }if(team2 == battingteam){
                overcount.setText(""+t2waitingdelivery/ballsperover);
                ballcount.setText(""+t2waitingdelivery%ballsperover);
            }
            
            JOptionPane.showMessageDialog(this, "Good delivery counted ");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }  
    }
    
    int team1tot;
    int team2tot;
    int team1wicketcount;
    int team2wicketcount;
    float team1rr;
    float team2rr;
    private void currentmatchData2(){
        int t1maintot;
        int t2maintot;
        int t1extratot;
        int t2extratot;
        
        System.out.println("------------------------");
        System.out.println(tourname + "-" + matchnum + "-" + team1 + "-" + team2);
        System.out.println("------------------------");
        
        String Query1 = "SELECT SUM(Runs) AS t1mainruns FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"'";
        String Query2 = "SELECT SUM(Runs) AS t2mainruns FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"'";
        String Query3 = "SELECT SUM(Runs_to_Wd_Ball + Nb + Batsman_RunsTo_Nb + Runs_to_Lb + Panelty_Runs ) as t1extraruns FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"'";
        String Query4 = "SELECT SUM(Runs_to_Wd_Ball + Nb + Batsman_RunsTo_Nb + Runs_to_Lb + Panelty_Runs ) as t2extraruns FROM scorecard_extra WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"'";
        String Query5 = "SELECT SUM(Wicket) AS t1wicketcount FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"'";
        String Query6 = "SELECT SUM(Wicket) AS t2wicketcount FROM scorecard_main WHERE TournamentName = '"+ tourname +"' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"'";
//        String Query1 = "SELECT SUM(Runs) AS t1mainruns FROM scorecard_main WHERE TournamentName = 'IPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"'";
//        String Query2 = "SELECT SUM(Runs) AS t2mainruns FROM scorecard_main WHERE TournamentName = 'IPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"'";
//        String Query3 = "SELECT SUM(Runs_to_Wd_Ball + Nb + Batsman_RunsTo_Nb + Runs_to_Lb + Panelty_Runs ) as t1extraruns FROM scorecard_extra WHERE TournamentName = 'IPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team1 +"'";
//        String Query4 = "SELECT SUM(Runs_to_Wd_Ball + Nb + Batsman_RunsTo_Nb + Runs_to_Lb + Panelty_Runs ) as t2extraruns FROM scorecard_extra WHERE TournamentName = 'IPL' AND MatchNumber = '"+ matchnum +"' AND BattingTeam = '"+ team2 +"'";
        
        
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query1);
            Rs.next();
            t1maintot = Rs.getInt("t1mainruns");
            Rs.close();
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query2);
            Rs.next();
            t2maintot = Rs.getInt("t2mainruns");
            Rs.close();
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query3);
            Rs.next();
            t1extratot = Rs.getInt("t1extraruns");
            Rs.close();
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query4);
            Rs.next();
            t2extratot = Rs.getInt("t2extraruns");
            Rs.close();
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query5);
            Rs.next();
            team1wicketcount = Rs.getInt("t1wicketcount");
            Rs.close();
            
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query6);
            Rs.next();
            team2wicketcount = Rs.getInt("t2wicketcount");
            Rs.close();
            
            team1tot = t1maintot + t1extratot;
            team2tot = t2maintot + t2extratot;
            
            team1total.setText("" + team1tot);
            team2total.setText("" + team2tot);
            
            team1wickets.setText("" + team1wicketcount);
            team2wickets.setText("" + team2wicketcount);
            
            DecimalFormat decfor = new DecimalFormat("0.00");
            team1rr = ((float)team1tot*6)/(float)t1gooddeliverycount; 
            team2rr = ((float)team2tot*6)/(float)t2gooddeliverycount;
            team1runrate.setText(""+decfor.format(team1rr));
            team2runrate.setText(""+decfor.format(team2rr));
            
            System.out.println("----------------------------");
            System.out.println("RR - " + team1rr + " | " + "RR - " + team2rr);
            System.out.println("----------------------------");
            
        } catch (Exception e) {
        }
    }
    
    private void nextballBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextballBTNMouseClicked
        //currentmatchData();
        //currentmatchData2();
        //DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
        //LocalDateTime now = LocalDateTime.now();
        
        java.util.Date date = new java.util.Date();
        long t = date.getTime();
        java.sql.Date sqlDate = new java.sql.Date(t);
        java.sql.Time sqlTime = new java.sql.Time(t);
        java.sql.Timestamp sqlTimestamp = new java.sql.Timestamp(t);
        
        int p1runsforball;
        int p2runsforball;
        int extra_wd_runsforball;
        int extra_lb_runsforball;
        int extra_nb_runsforball;
        int extra_penalty_runsforball;
        
        if(bowlername.getSelectedItem()==null || batsman1name.getSelectedItem()==null || batsman2name.getSelectedItem()==null 
                || (!Bat1_0.isSelected() && !Bat1_1.isSelected() && !Bat1_2.isSelected() && !Bat1_3.isSelected() && !Bat1_4.isSelected()
                && !Bat1_5.isSelected() && !Bat1_6.isSelected() && !Bat1_7.isSelected() && !Bat1_8.isSelected() && !Bat2_0.isSelected() 
                && !Bat2_1.isSelected() && !Bat2_2.isSelected() && !Bat2_3.isSelected() && !Bat2_4.isSelected() && !Bat2_5.isSelected() 
                && !Bat2_6.isSelected() && !Bat2_7.isSelected() && !Bat2_8.isSelected() && !wd_ball.isSelected() && !no_ball.isSelected() 
                && !leg_bye.isSelected() && !get_penalty.isSelected()) && !bat1_wkt.isSelected() && !bat2_wkt.isSelected() ){ 
            JOptionPane.showMessageDialog(this, "Required field is empty");
        }else{   
        getplayers();
        if(Bat1_0.isSelected()){
            p1runsforball = 0;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_1.isSelected()){
            p1runsforball = 1;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 1);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_2.isSelected()){
            p1runsforball = 2;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 2);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_3.isSelected()){
            p1runsforball = 3;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 3);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_4.isSelected()){
            p1runsforball = 4;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 4);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_5 .isSelected()){
            p1runsforball = 5;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 5);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_6.isSelected()){
            p1runsforball = 6;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 6);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_7 .isSelected()){
            p1runsforball = 7;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 7);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat1_8.isSelected()){
            p1runsforball = 8;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 8);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_0.isSelected()){
            p2runsforball = 0;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_1.isSelected()){
            p2runsforball = 1;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 1);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_2.isSelected()){
            p2runsforball = 2;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 2);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_3.isSelected()){
            p2runsforball = 3;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 3);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_4.isSelected()){
            p2runsforball = 4;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 4);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_5 .isSelected()){
            p2runsforball = 5;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 5);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_6.isSelected()){
            p2runsforball = 6;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 6);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_7 .isSelected()){
            p2runsforball = 7;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 7);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(Bat2_8.isSelected()){
            p2runsforball = 8;
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 8);
                Add.setInt(9, 0);
                Add.setString(10, "0");
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
        }if(wd_ball.isSelected()){
            extra_wd_runsforball = 1 + (Integer.parseInt((String)wd_runs.getSelectedItem()));
            
            if(B1_wdball_runs.isSelected()){
                p1runsforball = extra_wd_runsforball;
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_extra values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, p1runsforball);
                Add.setInt(9, 0);
                Add.setInt(10, 0);
                Add.setInt(11, 0);
                Add.setInt(12, 0);
                Add.setInt(13, 0);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
            
            if(B2_wdball_runs.isSelected()){
                p2runsforball = extra_wd_runsforball;
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_extra values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, p2runsforball);
                Add.setInt(9, 0);
                Add.setInt(10, 0);
                Add.setInt(11, 0);
                Add.setInt(12, 0);
                Add.setInt(13, 0);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
        
        }if(no_ball.isSelected()){
            extra_nb_runsforball = 1;
            if(B1_noball_runs.isSelected()){
                p1runsforball = (Integer.parseInt((String)batman_nb_runs.getSelectedItem()));
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_extra values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 1);
                Add.setInt(10, p1runsforball);
                Add.setInt(11, 0);
                Add.setInt(12, 0);
                Add.setInt(13, 0);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
            
            if(B2_noball_runs.isSelected()){
                p2runsforball = (Integer.parseInt((String)batman_nb_runs.getSelectedItem()));
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_extra values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 1);
                Add.setInt(10, p2runsforball);
                Add.setInt(11, 0);
                Add.setInt(12, 0);
                Add.setInt(13, 0);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }       
        }if(leg_bye.isSelected()){
            extra_lb_runsforball = (Integer.parseInt((String)lb_runs.getSelectedItem()));   
            
            if(B1_lbball_runs.isSelected()){
                p1runsforball = extra_lb_runsforball;
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_extra values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 0);
                Add.setInt(10, 0);
                Add.setInt(11, 1);
                Add.setInt(12, p1runsforball);
                Add.setInt(13, 0);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
            
            if(B2_lbball_runs.isSelected()){
                p2runsforball = extra_lb_runsforball;
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_extra values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 0);
                Add.setInt(10, 0);
                Add.setInt(11, 1);
                Add.setInt(12, p2runsforball);
                Add.setInt(13, 0);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
            
        }if(get_penalty.isSelected()){
            extra_penalty_runsforball = (Integer.parseInt((String)penalty_runs.getSelectedItem()));
            try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_extra values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, "Null");
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 0);
                Add.setInt(10, 0);
                Add.setInt(11, 0);
                Add.setInt(12, 0);               
                Add.setInt(13, extra_penalty_runsforball);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }if(bat1_wkt.isSelected()){
            if(wkt_caught.isSelected()){
                caughtplayer = caught_name.getSelectedItem().toString();
                System.out.println("B - " + bowler + " | C - " + caughtplayer);
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 1);
                Add.setString(10, batsman1);
                Add.setString(11, caughtplayer);
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }if(wkt_stumped.isSelected()){
                stumpedplayer = stm_or_thw_name.getSelectedItem().toString();
                if(B1_runout_runs.isSelected()){
                    p1runsforball = (Integer.parseInt((String)runout_runs.getSelectedItem()));
                    try {
                    Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                    PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    Add.setString(1, emailaddress);
                    Add.setString(2, tourname);
                    Add.setInt(3, matchnum);
                    Add.setString(4, battingteam);
                    Add.setString(5, bowlingteam);
                    Add.setString(6, batsman1);
                    Add.setString(7, bowler);
                    Add.setInt(8, p1runsforball);
                    Add.setInt(9, 1);
                    Add.setString(10, batsman1);
                    Add.setString(11, "0");
                    Add.setString(12, stumpedplayer);
                    Add.setString(13, "0");
                    Add.setString(14, "0");
                    Add.setTimestamp(15, sqlTimestamp);
                    int row = Add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Data Saved");
                    Con.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }
                
                if(B2_runout_runs.isSelected()){
                    p1runsforball = (Integer.parseInt((String)runout_runs.getSelectedItem()));
                    try {
                    Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                    PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    Add.setString(1, emailaddress);
                    Add.setString(2, tourname);
                    Add.setInt(3, matchnum);
                    Add.setString(4, battingteam);
                    Add.setString(5, bowlingteam);
                    Add.setString(6, batsman2);
                    Add.setString(7, bowler);
                    Add.setInt(8, p1runsforball);
                    Add.setInt(9, 1);
                    Add.setString(10, batsman1);
                    Add.setString(11, "0");
                    Add.setString(12, stumpedplayer);
                    Add.setString(13, "0");
                    Add.setString(14, "0");
                    Add.setTimestamp(15, sqlTimestamp);
                    int row = Add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Data Saved");
                    Con.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }
                
            }if(wkt_lbw.isSelected()){
                System.out.println("LBW | B - " + bowler);
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 1);
                Add.setString(10, batsman1);
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, bowler);
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }if(wkt_bowled.isSelected()){
                System.out.println("Bowled | B - " + bowler);
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman1);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 1);
                Add.setString(10, batsman1);
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, bowler);
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }           
            batsman1name.setSelectedIndex(-1);
            JOptionPane.showMessageDialog(this, "Select new player for Batsman 1");
        }if(bat2_wkt.isSelected()){
            if(wkt_caught.isSelected()){
                caughtplayer = caught_name.getSelectedItem().toString();
                System.out.println("B - " + bowler + " | C - " + caughtplayer);
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 1);
                Add.setString(10, batsman2);
                Add.setString(11, caughtplayer);
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, "0");
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }if(wkt_stumped.isSelected()){
                stumpedplayer = stm_or_thw_name.getSelectedItem().toString();
                if(B1_runout_runs.isSelected()){
                    p1runsforball = (Integer.parseInt((String)runout_runs.getSelectedItem()));
                    try {
                    Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                    PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    Add.setString(1, emailaddress);
                    Add.setString(2, tourname);
                    Add.setInt(3, matchnum);
                    Add.setString(4, battingteam);
                    Add.setString(5, bowlingteam);
                    Add.setString(6, batsman1);
                    Add.setString(7, bowler);
                    Add.setInt(8, p1runsforball);
                    Add.setInt(9, 1);
                    Add.setString(10, batsman2);
                    Add.setString(11, "0");
                    Add.setString(12, stumpedplayer);
                    Add.setString(13, "0");
                    Add.setString(14, "0");
                    Add.setTimestamp(15, sqlTimestamp);
                    int row = Add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Data Saved");
                    Con.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }if(B2_runout_runs.isSelected()){
                    p1runsforball = (Integer.parseInt((String)runout_runs.getSelectedItem()));
                    try {
                    Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                    PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    Add.setString(1, emailaddress);
                    Add.setString(2, tourname);
                    Add.setInt(3, matchnum);
                    Add.setString(4, battingteam);
                    Add.setString(5, bowlingteam);
                    Add.setString(6, batsman2);
                    Add.setString(7, bowler);
                    Add.setInt(8, p1runsforball);
                    Add.setInt(9, 1);
                    Add.setString(10, batsman2);
                    Add.setString(11, "0");
                    Add.setString(12, stumpedplayer);
                    Add.setString(13, "0");
                    Add.setString(14, "0");
                    Add.setTimestamp(15, sqlTimestamp);
                    int row = Add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Data Saved");
                    Con.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }
            }    
            if(wkt_lbw.isSelected()){
                System.out.println("LBW | B - " + bowler);
                try {
                    Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                    PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    Add.setString(1, emailaddress);
                    Add.setString(2, tourname);
                    Add.setInt(3, matchnum);
                    Add.setString(4, battingteam);
                    Add.setString(5, bowlingteam);
                    Add.setString(6, batsman2);
                    Add.setString(7, bowler);
                    Add.setInt(8, 0);
                    Add.setInt(9, 1);
                    Add.setString(10, batsman2);
                    Add.setString(11, "0");
                    Add.setString(12, "0");
                    Add.setString(13, bowler);
                    Add.setString(14, "0");
                    Add.setTimestamp(15, sqlTimestamp);
                    int row = Add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Data Saved");
                    Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }if(wkt_bowled.isSelected()){
                System.out.println("Bowled | B - " + bowler);
                try {
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
                PreparedStatement Add = Con.prepareStatement("Insert into scorecard_main values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                Add.setString(1, emailaddress);
                Add.setString(2, tourname);
                Add.setInt(3, matchnum);
                Add.setString(4, battingteam);
                Add.setString(5, bowlingteam);
                Add.setString(6, batsman2);
                Add.setString(7, bowler);
                Add.setInt(8, 0);
                Add.setInt(9, 1);
                Add.setString(10, batsman2);
                Add.setString(11, "0");
                Add.setString(12, "0");
                Add.setString(13, "0");
                Add.setString(14, bowler);
                Add.setTimestamp(15, sqlTimestamp);
                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Saved");
                Con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            } 
            batsman2name.setSelectedIndex(-1);
            JOptionPane.showMessageDialog(this, "Select new player for Batsman 2");
        }
        //System.out.println("bowler : " + bowler + " gives " + (p1runsforball + p2runsforball + extra_wd_runsforball + extra_lb_runsforball + extra_nb_runsforball) + " runs");
        //System.out.println("batsman1 : " + batsman1  + " took " + p1runsforball + " runs");
        //System.out.println("batsman2 : " + batsman2  + " took " + p2runsforball + " runs");
        System.out.println("-----------------");
        eachballrunbuttonGroup.clearSelection();
        nbbuttonGroup.clearSelection();
        penaltybuttonGroup.clearSelection();
        wickettypebuttonGroup.clearSelection();
        runoutplayerbuttonGroup1.clearSelection();
        wdrunsbuttonGroup.clearSelection();
        nbbatsmanrunsbuttonGroup1.clearSelection();
        lbrunsbuttonGroup.clearSelection();
        wd_runs.setSelectedIndex(-1);
        batman_nb_runs.setSelectedIndex(-1);
        lb_runs.setSelectedIndex(-1);
        penalty_runs.setSelectedIndex(-1);
        caught_name.setSelectedIndex(-1);
        stm_or_thw_name.setSelectedIndex(-1);
        runout_runs.setSelectedIndex(-1);
        //runout_B1_runs.removeAllItems();
        //runout_B2_runs.removeAllItems();
        }
        currentmatchData1();
        currentmatchData2();
        updatebattingtable();
        updatebowlingtable();
        updatebattingtablewicket();
    }//GEN-LAST:event_nextballBTNMouseClicked

    private void B1_noball_runsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1_noball_runsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B1_noball_runsActionPerformed

    private void B2_noball_runsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2_noball_runsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B2_noball_runsActionPerformed

    String team1;
    String team2;
    private void getteam1Name(int matchnum){
        String Query = "Select * from `matchschedule` where MatchNumber = '"+ this.matchnum +"'";
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query);
            if (Rs.next()) {
                team1 = Rs.getString(4);
                team1name.setText(""+team1);
                JOptionPane.showMessageDialog(this, "getteam1Name Done");
            }else{
               JOptionPane.showMessageDialog(this, "getteam1Name Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
    }
    
    private void getteam2Name(int matchnum){
        String Query = "Select * from `matchschedule` where MatchNumber = '"+ this.matchnum +"'";
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/atmdb","root","");
            St = Con.createStatement();
            Rs = St.executeQuery(Query);
            if (Rs.next()) {
                team2 = Rs.getString(5);
                team2name.setText(""+team2);
                JOptionPane.showMessageDialog(this, "getteam2Name Done");
            }else{
                JOptionPane.showMessageDialog(this, "getteam2Name Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e); 
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScoreCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScoreCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScoreCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScoreCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScoreCard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton B1_lbball_runs;
    private javax.swing.JRadioButton B1_noball_runs;
    private javax.swing.JRadioButton B1_runout_runs;
    private javax.swing.JRadioButton B1_wdball_runs;
    private javax.swing.JRadioButton B2_lbball_runs;
    private javax.swing.JRadioButton B2_noball_runs;
    private javax.swing.JRadioButton B2_runout_runs;
    private javax.swing.JRadioButton B2_wdball_runs;
    private javax.swing.JRadioButton Bat1_0;
    private javax.swing.JRadioButton Bat1_1;
    private javax.swing.JRadioButton Bat1_2;
    private javax.swing.JRadioButton Bat1_3;
    private javax.swing.JRadioButton Bat1_4;
    private javax.swing.JRadioButton Bat1_5;
    private javax.swing.JRadioButton Bat1_6;
    private javax.swing.JRadioButton Bat1_7;
    private javax.swing.JRadioButton Bat1_8;
    private javax.swing.JRadioButton Bat2_0;
    private javax.swing.JRadioButton Bat2_1;
    private javax.swing.JRadioButton Bat2_2;
    private javax.swing.JRadioButton Bat2_3;
    private javax.swing.JRadioButton Bat2_4;
    private javax.swing.JRadioButton Bat2_5;
    private javax.swing.JRadioButton Bat2_6;
    private javax.swing.JRadioButton Bat2_7;
    private javax.swing.JRadioButton Bat2_8;
    private javax.swing.JLabel backBTN;
    private javax.swing.JLabel ballcount;
    private javax.swing.JRadioButton bat1_wkt;
    private javax.swing.JRadioButton bat2_wkt;
    private javax.swing.JComboBox<String> batman_nb_runs;
    private javax.swing.JComboBox<String> batsman1name;
    private javax.swing.JComboBox<String> batsman2name;
    private javax.swing.JTable battingtable;
    private javax.swing.JComboBox<String> bowlername;
    private javax.swing.JTable bowlingtable;
    private javax.swing.JComboBox<String> caught_name;
    private javax.swing.JLabel dateandtime;
    private javax.swing.ButtonGroup eachballrunbuttonGroup;
    private javax.swing.JButton enterBTN;
    private javax.swing.JLabel exitBTN;
    private javax.swing.JRadioButton get_penalty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> lb_runs;
    private javax.swing.ButtonGroup lbrunsbuttonGroup;
    private javax.swing.JRadioButton leg_bye;
    private javax.swing.JTextField matchnumber;
    private javax.swing.ButtonGroup nbbatsmanrunsbuttonGroup1;
    private javax.swing.ButtonGroup nbbuttonGroup;
    private javax.swing.JButton nextballBTN;
    private javax.swing.JRadioButton no_ball;
    private javax.swing.JLabel overcount;
    private javax.swing.JComboBox<String> penalty_runs;
    private javax.swing.ButtonGroup penaltybuttonGroup;
    private javax.swing.JComboBox<String> runout_runs;
    private javax.swing.ButtonGroup runoutplayerbuttonGroup1;
    private javax.swing.JComboBox<String> stm_or_thw_name;
    private javax.swing.JLabel t1_balls;
    private javax.swing.JLabel t1_overs;
    private javax.swing.JLabel t2_balls;
    private javax.swing.JLabel t2_balls1;
    private javax.swing.JLabel t2_balls10;
    private javax.swing.JLabel t2_balls11;
    private javax.swing.JLabel t2_balls12;
    private javax.swing.JLabel t2_balls13;
    private javax.swing.JLabel t2_balls2;
    private javax.swing.JLabel t2_balls3;
    private javax.swing.JLabel t2_balls4;
    private javax.swing.JLabel t2_balls5;
    private javax.swing.JLabel t2_balls6;
    private javax.swing.JLabel t2_balls7;
    private javax.swing.JLabel t2_balls8;
    private javax.swing.JLabel t2_balls9;
    private javax.swing.JLabel t2_overs;
    private javax.swing.JLabel team1name;
    private javax.swing.JLabel team1runrate;
    private javax.swing.JLabel team1total;
    private javax.swing.JLabel team1wickets;
    private javax.swing.JLabel team2name;
    private javax.swing.JLabel team2runrate;
    private javax.swing.JLabel team2total;
    private javax.swing.JLabel team2wickets;
    private javax.swing.JLabel tourName;
    private javax.swing.ButtonGroup twoteamsbuttonGroup;
    private javax.swing.JLabel userEmail;
    private javax.swing.JRadioButton wd_ball;
    private javax.swing.JComboBox<String> wd_runs;
    private javax.swing.ButtonGroup wdrunsbuttonGroup;
    private javax.swing.ButtonGroup wickettypebuttonGroup;
    private javax.swing.JRadioButton wkt_bowled;
    private javax.swing.JRadioButton wkt_caught;
    private javax.swing.JRadioButton wkt_lbw;
    private javax.swing.JRadioButton wkt_stumped;
    // End of variables declaration//GEN-END:variables
}
